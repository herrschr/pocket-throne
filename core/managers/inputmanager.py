from core.lib.posix.pygame_sdl2 import *
from core.entities.event import *

class InputManager:
	"""KeyboardController takes Pygame events generated by the
	keyboard and uses them to control the model, by sending Requests
	or to control the Pygame display directly, as with the QuitEvent
	"""
	def __init__(self, eventmanager):
		self._eventmgr = eventmanager
		self._eventmgr.register_listener( self )

	# handle pygame events
	def on_event(self, event):
		if isinstance(event, TickEvent):
			#Handle Input Events
			for event in pygame_sdl2.event.get():
				response_event = None
				if event.type == QUIT:
					response_event = QuitEvent()

				elif event.type == KEYDOWN and event.key == K_ESCAPE:
					response_event = QuitEvent()

				elif event.type == MOUSEBUTTONDOWN:
					gui_pos = pygame_sdl2.mouse.get_pos()
					response_event = MouseClickedEvent(gui_pos)

				if response_event != None:
					self._eventmgr.post(response_event)