# superclass for any events that might be generated by an object and sent to the EventManager
class Event:
	def __init__(self):
		self.name = "Generic Event"

# SYSTEM EVENTS
class GameStartedEvent(Event):
	def __init__(self, game):
		self.name = "Game Started Event"
		self.game = game

class TickEvent(Event):
	def __init__(self):
		self.name = "CPU Tick Event"

class QuitEvent(Event):
	def __init__(self):
		self.name = "Program Quit Event"

# MAP EVENTS
class MapLoadedEvent(Event):
	def __init__(self, tilemap):
		self.name = "Map Loaded Event"
		self.tilemap = tilemap

class TileSelectedEvent(Event):
	def __init__(self, selected_tile):
		self.name = "Tile Selected Event"
		self.selected_tile = selected_tile

class TileUnselectedEvent(Event):
	def __init__(self,):
		self.name = "Tile Unselected Event"

# UNIT EVENTS
class UnitMoveRequest(Event):
	def __init__(self, unit, (rel_x, rel_y)):
		self.name = "Unit Move Request"
		self.unit = unit
		self.pos = (rel_x, rel_y)

class UnitMovedEvent(Event):
	def __init__(self, unit):
		self.name = "Unit Moved Event"
		self.unit = unit

# INPUT EVENTS
class MouseClickedEvent(Event):
	def __init__(self, pos):
		self.name = "Mouse Clicked Event"
		self.pos = pos